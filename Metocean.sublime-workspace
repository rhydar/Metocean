{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"simpl",
				"simpleFuncR	generateSimpleFunctionR"
			],
			[
				"simp",
				"simpleFuncR	generateSimpleFunctionR"
			],
			[
				"det",
				"detach"
			],
			[
				"Sp",
				"Spectra_Berth_All_Point2"
			],
			[
				"read",
				"readMikeDFS0"
			],
			[
				"in",
				"install	install r package"
			],
			[
				"output",
				"output_type"
			],
			[
				"tabula",
				"tabulateSeasonalECDF"
			],
			[
				"R",
				"Rmd"
			],
			[
				"kn",
				"knitr	Read r script"
			],
			[
				"getEx",
				"getExceedance"
			],
			[
				"sim",
				"simpleFuncR	generateSimpleFunctionR"
			],
			[
				"xml",
				"xml_file"
			],
			[
				"get",
				"getroot	function"
			],
			[
				"pack",
				"packageR	packageNamespaceR"
			],
			[
				"pac",
				"packageR	packageNamespaceR"
			],
			[
				"L",
				"Line2D"
			],
			[
				"l",
				"lines"
			],
			[
				"re",
				"recurse_dir"
			],
			[
				"df",
				"df2sqlite	function"
			],
			[
				"li",
				"listdir	function"
			],
			[
				"list",
				"listdir"
			],
			[
				"177K",
				"177KFSRU_20125LNGC_80"
			],
			[
				"lis",
				"listdir"
			],
			[
				"PO",
				"PROJECT_BACKUP"
			],
			[
				"Mean",
				"Mean_third_pos"
			],
			[
				"mo",
				"motions"
			],
			[
				"mx",
				"mxNeg3	statement"
			],
			[
				"mxN",
				"mxNeg2	statement"
			],
			[
				"m3",
				"m3neg	statement"
			],
			[
				"f",
				"fetchall"
			],
			[
				"P",
				"Python"
			],
			[
				"S",
				"Scripts"
			],
			[
				"exp",
				"expression"
			],
			[
				"arr",
				"arrayOfArrays"
			],
			[
				"line",
				"line"
			],
			[
				"rea",
				"read_input_file"
			],
			[
				"input",
				"input_file"
			],
			[
				"leng",
				"lengths"
			],
			[
				"len",
				"lengths"
			],
			[
				"vol",
				"volume"
			],
			[
				"draft",
				"drafts"
			],
			[
				"le",
				"lengths"
			],
			[
				"t",
				"tide"
			],
			[
				"pr",
				"predicted"
			],
			[
				"sp",
				"springs"
			],
			[
				"or",
				"org"
			],
			[
				"a",
				"â€™auto-mode-alist"
			],
			[
				"org",
				"org-mode"
			],
			[
				"fr",
				"frame	Beamer frame"
			],
			[
				"da",
				"data"
			],
			[
				"E",
				"EVA"
			],
			[
				"return",
				"return"
			],
			[
				"zco",
				"zcoord"
			],
			[
				"coo",
				"coords"
			],
			[
				"ret",
				"return"
			],
			[
				"proj",
				"projString"
			],
			[
				"yc",
				"ycoord"
			],
			[
				"xco",
				"xcoord"
			],
			[
				"libra",
				"library"
			],
			[
				"Cal",
				"CalculateVerticalTension"
			],
			[
				"CT",
				"CT66"
			],
			[
				"C",
				"CircStats"
			]
		]
	},
	"buffers":
	[
		{
			"file": "R/metocean.R",
			"settings":
			{
				"buffer_size": 6003,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nR version 3.1.2 (2014-10-31) -- \"Pumpkin Helmet\"\nCopyright (C) 2014 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin13.4.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n> getwd()\n[1] \"/Applications/Sublime Text.app/Contents/MacOS\"\n> setwd(\"/Users/rhydarharris/Desktop/\")\n> dir() \n [1] \"FSRU 177K\"              \"Library\"                \"PRDW_RLH01\"            \n [4] \"Process_CSIR_lw_data\"   \"QGIS_Tests\"             \"Saldanha\"              \n [7] \"Saldanha 01\"            \"SamsungGalaxyS3Mini\"    \"Test\"                  \n[10] \"bluewhale1444982483400\" \"test.R\"                \n> setwd(\"Saldanha\")\n> library(knitr)\n> knit(\"Metocean.Rmd\")\n\n\nprocessing file: Metocean.Rmd\n  |                                                                         |                                                                 |   0%  |                                                                         |........                                                         |  12%\n  ordinary text without R code\n\n  |                                                                         |................                                                 |  25%\nlabel: unnamed-chunk-1 (with options) \nList of 3\n $ echo   : logi FALSE\n $ warning: logi FALSE\n $ eval   : logi TRUE\n\n* installing *source* package 'Metocean' ...\n** R\n** preparing package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded\n* DONE (Metocean)\n  |                                                                         |........................                                         |  38%\n  ordinary text without R code\n\n  |                                                                         |................................                                 |  50%\nlabel: unnamed-chunk-2 (with options) \nList of 3\n $ warning: logi FALSE\n $ echo   : logi FALSE\n $ message: logi FALSE\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nLoading required package: hexbin\n\nopenair object created by:\n	scatterPlot(mydata = input_df, x = Hs, y = Tp, method = \"hexbin\",     cols = \"jet\", key = FALSE, key.title = \"What\", ref.x = list(v = c(col_hmo),         col = \"dark gray\", lwd = 3), ref.y = list(h = c(col_tp),         col = \"dark gray\", lwd = 3), xbins = 100, hemisphere = \"southern\",     aspect = 1, hexbin = FALSE, silent = TRUE, hexbinplot.colorkey = 0)\n\nthis contains:\n	a single data frame:\n	$data [with no subset structure]\n	a single plot object:\n	$plot [with no subset structure]\n\n\nopenair object created by:\n	scatterPlot(mydata = input_df, x = Hs, y = Dp, method = \"hexbin\",     cols = \"jet\", ref.x = list(v = c(col_hmo), col = \"dark gray\",         lwd = 3), ref.y = list(h = c(col_dir), col = \"dark gray\",         lwd = 3), xbins = 100, hemisphere = \"southern\", aspect = 1)\n\nthis contains:\n	a single data frame:\n	$data [with no subset structure]\n	a single plot object:\n	$plot [with no subset structure]\n\n\nopenair object created by:\n	scatterPlot(mydata = input_df, x = Dp, y = Tp, method = \"hexbin\",     cols = \"jet\", ref.x = list(v = c(col_dir), col = \"dark gray\",         lwd = 3), ref.y = list(h = c(col_tp), col = \"dark gray\",         lwd = 3), xbins = 100, hemisphere = \"southern\", aspect = 1)\n\nthis contains:\n	a single data frame:\n	$data [with no subset structure]\n	a single plot object:\n	$plot [with no subset structure]\n\n  |                                                                         |.........................................                        |  62%\n  ordinary text without R code\n\n  |                                                                         |.................................................                |  75%\nlabel: unnamed-chunk-3 (with options) \nList of 5\n $ eval      : logi TRUE\n $ results   : chr \"asis\"\n $ out.extra : chr \"style=\\\"float:left\\\"\"\n $ echo      : logi FALSE\n $ fig.height: num 4\n\n  |                                                                         |.........................................................        |  88%\nlabel: unnamed-chunk-4 (with options) \nList of 4\n $ eval     : logi TRUE\n $ results  : chr \"asis\"\n $ out.extra: chr \"style=\\\"float:right\\\"\"\n $ echo     : logi FALSE\n\n  |                                                                         |.................................................................| 100%\n  ordinary text without R code\n\n\noutput file: Metocean.md\n\n[1] \"Metocean.md\"\nWarning messages:\n1: package 'devtools' was built under R version 3.1.3 \n2: Username parameter is deprecated. Please use rhydar/Metocean \n> \n> knit(\"Metocean.Rmd\")\n\n\nprocessing file: Metocean.Rmd\n  |                                                                         |                                                                 |   0%  |                                                                         |........                                                         |  12%\n  ordinary text without R code\n\n  |                                                                         |................                                                 |  25%\nlabel: unnamed-chunk-1 (with options) \nList of 3\n $ echo   : logi FALSE\n $ warning: logi FALSE\n $ eval   : logi TRUE\n\n* installing *source* package 'Metocean' ...\n** R\n** preparing package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded\n* DONE (Metocean)\n  |                                                                         |........................                                         |  38%\n  ordinary text without R code\n\n  |                                                                         |................................                                 |  50%\nlabel: unnamed-chunk-2 (with options) \nList of 3\n $ warning: logi FALSE\n $ echo   : logi FALSE\n $ message: logi FALSE\n\n\nopenair object created by:\n	scatterPlot(mydata = input_df, x = Hs, y = Tp, method = \"hexbin\",     cols = \"jet\", key = FALSE, key.title = \"What\", ref.x = list(v = c(col_hmo),         col = \"dark gray\", lwd = 3), ref.y = list(h = c(col_tp),         col = \"dark gray\", lwd = 3), xbins = 100, hemisphere = \"southern\",     aspect = 1, hexbin = FALSE, silent = TRUE, hexbinplot.colorkey = 0)\n\nthis contains:\n	a single data frame:\n	$data [with no subset structure]\n	a single plot object:\n	$plot [with no subset structure]\n\n\nopenair object created by:\n	scatterPlot(mydata = input_df, x = Hs, y = Dp, method = \"hexbin\",     cols = \"jet\", ref.x = list(v = c(col_hmo), col = \"dark gray\",         lwd = 3), ref.y = list(h = c(col_dir), col = \"dark gray\",         lwd = 3), xbins = 100, hemisphere = \"southern\", aspect = 1)\n\nthis contains:\n	a single data frame:\n	$data [with no subset structure]\n	a single plot object:\n	$plot [with no subset structure]\n\n\nopenair object created by:\n	scatterPlot(mydata = input_df, x = Dp, y = Tp, method = \"hexbin\",     cols = \"jet\", ref.x = list(v = c(col_dir), col = \"dark gray\",         lwd = 3), ref.y = list(h = c(col_tp), col = \"dark gray\",         lwd = 3), xbins = 100, hemisphere = \"southern\", aspect = 1)\n\nthis contains:\n	a single data frame:\n	$data [with no subset structure]\n	a single plot object:\n	$plot [with no subset structure]\n\n  |                                                                         |.........................................                        |  62%\n  ordinary text without R code\n\n  |                                                                         |.................................................                |  75%\nlabel: unnamed-chunk-3 (with options) \nList of 5\n $ eval      : logi TRUE\n $ results   : chr \"asis\"\n $ out.extra : chr \"style=\\\"float:left\\\"\"\n $ echo      : logi FALSE\n $ fig.height: num 4\n\n  |                                                                         |.........................................................        |  88%\nlabel: unnamed-chunk-4 (with options) \nList of 4\n $ eval     : logi TRUE\n $ results  : chr \"asis\"\n $ out.extra: chr \"style=\\\"float:right\\\"\"\n $ echo     : logi FALSE\n\n  |                                                                         |.................................................................| 100%\n  ordinary text without R code\n\n\noutput file: Metocean.md\n\n[1] \"Metocean.md\"\nWarning message:\nUsername parameter is deprecated. Please use rhydar/Metocean \n> knit(\"Metocean.Rmd\")\n\n\nprocessing file: Metocean.Rmd\n  |                                                                         |                                                                 |   0%  |                                                                         |.........                                                        |  14%\n  ordinary text without R code\n\n  |                                                                         |...................                                              |  29%\nlabel: unnamed-chunk-1 (with options) \nList of 3\n $ echo   : logi FALSE\n $ warning: logi FALSE\n $ eval   : logi TRUE\n\n* installing *source* package 'Metocean' ...\n** R\n** preparing package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded\n* DONE (Metocean)\n  |                                                                         |............................                                     |  43%\n  ordinary text without R code\n\n  |                                                                         |.....................................                            |  57%\nlabel: unnamed-chunk-2 (with options) \nList of 3\n $ warning: logi FALSE\n $ echo   : logi FALSE\n $ message: logi FALSE\n\n  |                                                                         |..............................................                   |  71%\nlabel: unnamed-chunk-3 (with options) \nList of 5\n $ eval      : logi TRUE\n $ results   : chr \"asis\"\n $ out.extra : chr \"style=\\\"float:left\\\"\"\n $ echo      : logi FALSE\n $ fig.height: num 4\n\n  |                                                                         |........................................................         |  86%\nlabel: unnamed-chunk-4 (with options) \nList of 4\n $ eval     : logi TRUE\n $ results  : chr \"asis\"\n $ out.extra: chr \"style=\\\"float:right\\\"\"\n $ echo     : logi FALSE\n\n  |                                                                         |.................................................................| 100%\n  ordinary text without R code\n\n\noutput file: Metocean.md\n\n[1] \"Metocean.md\"\nWarning message:\nUsername parameter is deprecated. Please use rhydar/Metocean \n> library(openair)\n> help(windRose)\nwindRose                package:openair                R Documentation\n\nTraditional wind rose plot and pollution rose variation\n\nDescription:\n\n     The traditional wind rose plot that plots wind speed and wind\n     direction by different intervals. The pollution rose applies the\n     same plot structure but substitutes other measurements, most\n     commonly a pollutant time series, for wind speed.\n\nUsage:\n\n     windRose(mydata, ws = \"ws\", wd = \"wd\", ws2 = NA, wd2 = NA,\n     ws.int = 2, angle = 30, type = \"default\", bias.corr = TRUE, cols = \"default\",\n     grid.line = NULL, width = 1, seg = NULL, auto.text = TRUE, breaks\n     = 4, offset = 10, max.freq = NULL, paddle = TRUE, key.header =\n     NULL, key.footer = \"(m/s)\", key.position = \"bottom\", key = TRUE,\n     dig.lab = 5, statistic = \"prop.count\", pollutant = NULL, annotate\n     = TRUE, border = NA, ...)\n     \n     \n         pollutionRose(mydata, pollutant = \"nox\", key.footer = pollutant,\n            key.position = \"right\", key = TRUE, breaks = 6, paddle = FALSE,\n     seg = 0.9, ...)\n     \nArguments:\n\n  mydata: A data frame containing fields 'ws' and 'wd'\n\n      ws: Name of the column representing wind speed.\n\n      wd: Name of the column representing wind direction.\n\n     ws2: The user can supply a second set of wind speed and wind\n          direction values with which the first can be compared. See\n          details below for full explanation.\n\n     wd2: see 'ws2'.\n\n  ws.int: The Wind speed interval. Default is 2 m/s but for low met\n          masts with low mean wind speeds a value of 1 or 0.5 m/s may\n          be better. Note, this argument is superseded in\n          'pollutionRose'. See 'breaks' below.\n\n   angle: Default angle of \"spokes\" is 30. Other potentially useful\n          angles are 45 and 10. Note that the width of the wind speed\n          interval may need adjusting using 'width'.\n\n    type: 'type' determines how the data are split i.e. conditioned,\n          and then plotted. The default is will produce a single plot\n          using the entire data. Type can be one of the built-in types\n          as detailed in 'cutData' e.g. \"season\", \"year\", \"weekday\" and\n          so on. For example, 'type = \"season\"' will produce four plots\n          - one for each season.\n\n          It is also possible to choose 'type' as another variable in\n          the data frame. If that variable is numeric, then the data\n          will be split into four quantiles (if possible) and labelled\n          accordingly. If type is an existing character or factor\n          variable, then those categories/levels will be used directly.\n          This offers great flexibility for understanding the variation\n          of different variables and how they depend on one another.\n\n          Type can be up length two e.g. 'type = c(\"season\",\n          \"weekday\")' will produce a 2x2 plot split by season and day\n          of the week. Note, when two types are provided the first\n          forms the columns and the second the rows.\n\nbias.corr: When 'angle' does not divide exactly into 360 a bias is\n          introduced in the frequencies when the wind direction is\n          already supplied rounded to the nearest 10 degrees, as is\n          often the case. For example, if 'angle = 22.5', N, E, S, W\n          will include 3 wind sectors and all other angles will be two.\n          A bias correction can made to correct for this problem. A\n          simple method according to Applequist (2012) is used to\n          adjust the frequencies.\n\n    cols: Colours to be used for plotting. Options include \"default\",\n          \"increment\", \"heat\", \"jet\", \"hue\" and user defined. For user\n          defined the user can supply a list of colour names recognised\n          by R (type 'colours()' to see the full list). An example\n          would be 'cols = c(\"yellow\", \"green\", \"blue\", \"black\")'.\n\ngrid.line: Grid line interval to use. If 'NULL', as in default, this is\n          assigned by 'windRose' based on the available data range.\n          However, it can also be forced to a specific value, e.g.\n          'grid.line = 10'.\n\n   width: For 'paddle = TRUE', the adjustment factor for width of wind\n          speed intervals. For example, 'width = 1.5' will make the\n          paddle width 1.5 times wider.\n\n     seg: For 'pollutionRose' 'seg' determines with width of the\n          segments. For example, 'seg = 0.5' will produce segments 0.5\n          * 'angle'.\n\nauto.text: Either 'TRUE' (default) or 'FALSE'. If 'TRUE' titles and\n          axis labels will automatically try and format pollutant names\n          and units properly e.g.  by subscripting the '2' in NO2.\n\n  breaks: Most commonly, the number of break points for wind speed in\n          'windRose' or pollutant in 'pollutionRose'. For 'windRose'\n          and the 'ws.int' default of 2 m/s, the default, 4, generates\n          the break points 2, 4, 6, 8 m/s. For 'pollutionRose', the\n          default, 6, attempts to breaks the supplied data at\n          approximately 6 sensible break points. However, 'breaks' can\n          also be used to set specific break points. For example, the\n          argument 'breaks = c(0, 1, 10, 100)' breaks the data into\n          segments <1, 1-10, 10-100, >100.\n\n  offset: The size of the 'hole' in the middle of the plot, expressed\n          as a percentage of the polar axis scale, default 10.\n\nmax.freq: Controls the scaling used by setting the maximum value for\n          the radial limits. This is useful to ensure several plots use\n          the same radial limits.\n\n  paddle: Either 'TRUE' (default) or 'FALSE'. If 'TRUE' plots rose\n          using `paddle' style spokes. If 'FALSE' plots rose using\n          `wedge' style spokes.\n\nkey.header: Adds additional text/labels above and/or below the scale\n          key, respectively. For example, passing 'windRose(mydata,\n          key.header = \"ws\")' adds the addition text as a scale header.\n          Note: This argument is passed to 'drawOpenKey' via\n          'quickText', applying the auto.text argument, to handle\n          formatting.\n\nkey.footer: see 'key.footer'.\n\nkey.position: Location where the scale key is to plotted. Allowed\n          arguments currently include \"top\", \"right\", \"bottom\" and\n          \"left\".\n\n     key: Fine control of the scale key via 'drawOpenKey'. See\n          'drawOpenKey' for further details.\n\n dig.lab: The number of signficant figures at which scientific number\n          formatting is used in break point and key labelling. Default\n          5.\n\nstatistic: The 'statistic' to be applied to each data bin in the plot.\n          Options currently include \"prop.count\", \"prop.mean\" and\n          \"abs.count\". The default \"prop.count\" sizes bins according to\n          the proportion of the frequency of measurements.  Similarly,\n          \"prop.mean\" sizes bins according to their relative\n          contribution to the mean. \"abs.count\" provides the absolute\n          count of measurements in each bin.\n\npollutant: Alternative data series to be sampled instead of wind speed.\n          The 'windRose' default NULL is equivalent to 'pollutant =\n          \"ws\"'.\n\nannotate: If 'TRUE' then the percentage calm and mean values are\n          printed in each panel.\n\n  border: Border colour for shaded areas. Default is no border.\n\n     ...: For 'pollutionRose' other parameters that are passed on to\n          'windRose'. For 'windRose' other parameters that are passed\n          on to 'drawOpenKey', 'lattice:xyplot' and 'cutData'. Axis and\n          title labelling options ('xlab', 'ylab', 'main') are passed\n          to 'xyplot' via 'quickText' to handle routine formatting.\n\nDetails:\n\n     For 'windRose' data are summarised by direction, typically by 45\n     or 30 (or 10) degrees and by different wind speed categories.\n     Typically, wind speeds are represented by different width\n     \"paddles\". The plots show the proportion (here represented as a\n     percentage) of time that the wind is from a certain angle and wind\n     speed range.\n\n     By default 'windRose' will plot a windRose in using \"paddle\" style\n     segments and placing the scale key below the plot.\n\n     The argument 'pollutant' uses the same plotting structure but\n     substitutes another data series, defined by 'pollutant', for wind\n     speed.\n\n     The option 'statistic = \"prop.mean\"' provides a measure of the\n     relative contribution of each bin to the panel mean, and is\n     intended for use with 'pollutionRose'.\n\n     'pollutionRose' is a 'windRose' wrapper which brings 'pollutant'\n     forward in the argument list, and attempts to sensibly rescale\n     break points based on the 'pollutant' data range by by-passing\n     'ws.int'.\n\n     By default, 'pollutionRose' will plot a pollution rose of 'nox'\n     using \"wedge\" style segments and placing the scale key to the\n     right of the plot.\n\n     It is possible to compare two wind speed-direction data sets using\n     'pollutionRose'. There are many reasons for doing so e.g. to see\n     how one site compares with another or for meteorological model\n     evaluation. In this case, 'ws' and 'wd' are considered to the the\n     reference data sets with which a second set of wind speed and wind\n     directions are to be compared ('ws2' and 'wd2'). The first set of\n     values is subtracted from the second and the differences compared.\n     If for example, 'wd2' was biased positive compared with 'wd' then\n     'pollutionRose' will show the bias in polar coordinates. In its\n     default use, wind direction bias is colour-coded to show negative\n     bias in one colour and positive bias in another.\n\nValue:\n\n     As well as generating the plot itself, 'windRose' and\n     'pollutionRose' also return an object of class \"openair\". The\n     object includes three main components: 'call', the command used to\n     generate the plot; 'data', the data frame of summarised\n     information used to make the plot; and 'plot', the plot itself. If\n     retained, e.g. using 'output <- windRose(mydata)', this output can\n     be used to recover the data, reproduce or rework the original plot\n     or undertake further analysis.\n\n     An openair output can be manipulated using a number of generic\n     operations, including 'print', 'plot' and 'summarise'.\n\n     Summarised proportions can also be extracted directly using the\n     '$data' operator, e.g.  'object$data' for 'output <-\n     windRose(mydata)'. This returns a data frame with three set\n     columns: 'cond', conditioning based on 'type'; 'wd', the wind\n     direction; and 'calm', the 'statistic' for the proportion of data\n     unattributed to any specific wind direction because it was\n     collected under calm conditions; and then several (one for each\n     range binned for the plot) columns giving proportions of\n     measurements associated with each 'ws' or 'pollutant' range\n     plotted as a discrete panel.\n\nNote:\n\n     'windRose' and 'pollutionRose' both use drawOpenKey to produce\n     scale keys.\n\nAuthor(s):\n\n     David Carslaw (with some additional contributions by Karl Ropkins)\n\nReferences:\n\n     Applequist, S, 2012: Wind Rose Bias Correction. J. Appl. Meteor.\n     Climatol., 51, 1305-1309.\n\n     This paper seems to be the original?\n\n     Droppo, J.G. and B.A. Napier (2008) Wind Direction Bias in\n     Generating Wind Roses and Conducting Sector-Based Air Dispersion\n     Modeling, Journal of the Air & Waste Management Association, 58:7,\n     913-918.\n\nSee Also:\n\n     See 'drawOpenKey' for fine control of the scale key.\n\n     See 'polarFreq' for a more flexible version that considers other\n     statistics and pollutant concentrations.\n\nExamples:\n\n     # load example data from package data(mydata)\n     \n     # basic plot\n     windRose(mydata)\n     \n     # one windRose for each year\n     windRose(mydata,type = \"year\")\n     \n     # windRose in 10 degree intervals with gridlines and width adjusted\n     ## Not run:\n     \n     windRose(mydata, angle = 10, width = 0.2, grid.line = 1)\n     ## End(Not run)\n     \n     \n     # pollutionRose of nox\n     pollutionRose(mydata, pollutant = \"nox\")\n     \n     ## source apportionment plot - contribution to mean\n     ## Not run:\n     \n     pollutionRose(mydata, pollutant = \"pm10\", type = \"year\", statistic = \"prop.mean\")\n     ## End(Not run)\n     \n     \n     ## example of comparing 2 met sites\n     ## first we will make some new ws/wd data with a postive bias\n     mydata$ws2 = mydata$ws + 2 * rnorm(nrow(mydata)) + 1\n     mydata$wd2 = mydata$wd + 30 * rnorm(nrow(mydata)) + 30\n     \n     ## need to correct negative wd\n     id <- which(mydata$wd2 < 0)\n     mydata$wd2[id] <- mydata$wd2[id] + 360\n     \n     ## results show postive bias in wd and ws\n     pollutionRose(mydata, ws = \"ws\", wd = \"wd\", ws2 = \"ws2\", wd2 = \"wd2\")\n     \n\n> knit(\"Metocean.Rmd\")\n\n\nprocessing file: Metocean.Rmd\n  |                                                                         |                                                                 |   0%  |                                                                         |.......                                                          |  11%\n  ordinary text without R code\n\n  |                                                                         |..............                                                   |  22%\nlabel: unnamed-chunk-1 (with options) \nList of 3\n $ echo   : logi FALSE\n $ warning: logi FALSE\n $ eval   : logi TRUE\n\n* installing *source* package 'Metocean' ...\n** R\n** preparing package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded\n* DONE (Metocean)\n  |                                                                         |......................                                           |  33%\n  ordinary text without R code\n\n  |                                                                         |.............................                                    |  44%\nlabel: unnamed-chunk-2 (with options) \nList of 3\n $ warning: logi FALSE\n $ echo   : logi FALSE\n $ message: logi FALSE\n\n  |                                                                         |....................................                             |  56%\nlabel: unnamed-chunk-3 (with options) \nList of 5\n $ eval      : logi TRUE\n $ results   : chr \"asis\"\n $ out.extra : chr \"style=\\\"float:left\\\"\"\n $ echo      : logi FALSE\n $ fig.height: num 4\n\n  |                                                                         |...........................................                      |  67%\nlabel: unnamed-chunk-4 (with options) \nList of 4\n $ eval     : logi TRUE\n $ results  : chr \"asis\"\n $ out.extra: chr \"style=\\\"float:right\\\"\"\n $ echo     : logi FALSE\n\n  |                                                                         |...................................................              |  78%\n  ordinary text without R code\n\n  |                                                                         |..........................................................       |  89%\nlabel: unnamed-chunk-5\n  |                                                                         |.................................................................| 100%\n  ordinary text without R code\n\n\noutput file: Metocean.md\n\n[1] \"Metocean.md\"\nWarning message:\nUsername parameter is deprecated. Please use rhydar/Metocean \n> ",
			"settings":
			{
				"buffer_size": 26791,
				"line_ending": "Unix",
				"name": "*REPL* [r]",
				"scratch": true
			}
		},
		{
			"file": "/Users/rhydarharris/Dropbox/MEng/Thesis/Scripts/processNCEP.r",
			"settings":
			{
				"buffer_size": 27610,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					"Primary Quick Build"
				],
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					"Choose Quick Build"
				],
				[
					"Packages/LaTeXing/LaTeX.sublime-build",
					"Clean up Files"
				]
			],
			[
				"Packages/LaTeXing/LaTeX.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/knitr/knitr-Markdown.sublime-build",
					""
				],
				[
					"Packages/knitr/knitr-Markdown.sublime-build",
					"Run"
				]
			],
			[
				"Packages/knitr/knitr-Markdown.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "replR",
		"selected_items":
		[
			[
				"replR",
				"SublimeREPL: R"
			],
			[
				"repl",
				"SublimeREPL: Python - IPython"
			],
			[
				"note",
				"Snippet: Model tests"
			],
			[
				"repl ip",
				"SublimeREPL: Python - IPython"
			],
			[
				"repl I",
				"SublimeREPL: Python - IPython"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Add Repository"
			],
			[
				"Package Control: Install",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst ",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: figure"
			],
			[
				"Snippet: Bibtex ",
				"Snippet: BibTeX Misc"
			],
			[
				"Snippet: Bibtex 	",
				"Snippet: BibTeX Article"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 552.0
	},
	"console":
	{
		"height": 360.0,
		"history":
		[
			"Open IPython Notebook",
			"exit()",
			"exi",
			"REPL",
			"REPL R",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/rhydarharris/Dropbox/Scripts/R/RPackages/Metocean",
		"/Users/rhydarharris/Dropbox/Scripts/R/RPackages/Metocean/R"
	],
	"file_history":
	[
		"/Users/rhydarharris/Desktop/test.R",
		"/Users/rhydarharris/Desktop/Saldanha/Metocean.Rmd",
		"/Users/rhydarharris/Dropbox/Scripts/R/RPackages/Metocean/R/processNCEP.r",
		"/Users/rhydarharris/Dropbox/Scripts/R/RPackages/Metocean/R/generatePivot.r",
		"/Users/rhydarharris/Dropbox/Scripts/R/RPackages/Metocean/R/polarPlot.r",
		"/Users/rhydarharris/Dropbox/Scripts/Python/DVRS/readXml.py",
		"/Users/rhydarharris/Desktop/bluewhale1444982483400/Tutorial1_2016/Tutorial1_2016/DVRS/DVRS_Tutorial1.dvrsf",
		"/usr/local/texlive/2015/release-texlive.txt",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/User/generateScriptR.sublime-snippet",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/User/generateSimpleFunctionR.sublime-snippet",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/User/commentR.sublime-snippet",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/User/packageNamespaceR.sublime-snippet",
		"/Users/rhydarharris/Dropbox/Final Conference Docs/README.txt",
		"/Volumes/F/PROJECT_BACKUP/SA (S2018) LNG Medium Term IPP/01_Data/Layout/Saldanha 01/DRIFT/177KFSRU_20125LNGC_80/C/002/DRFT.dat",
		"/Volumes/F/PROJECT_BACKUP/SA (S2018) LNG Medium Term IPP/01_Data/Layout/Saldanha 01/DRIFT/177KFSRU_20125LNGC_80/B/002/DRFT.dat",
		"/Volumes/F/PROJECT_BACKUP/SA (S2018) LNG Medium Term IPP/01_Data/Layout/Saldanha 01/DRIFT/177KFSRU_20125LNGC_80/A/002/DRFT.dat",
		"/Users/rhydarharris/Dropbox/Scripts/Python/aqwa_process_drift_lis.py",
		"/Users/rhydarharris/Dropbox/Scripts/SQL/CreateTables.sql",
		"/Volumes/F/PROJECT_BACKUP/SA (S2020) Power Barge IPP/PostProcess/Wave_Timeseries_Mean.txt",
		"/Volumes/F/PROJECT_BACKUP/SA (S2020) Power Barge IPP/PostProcess/Coega_S4_Waves_19.5mCD.txt",
		"/Users/rhydarharris/Dropbox/Scripts/R/RPackages/Metocean/DESCRIPTION",
		"/Users/rhydarharris/Dropbox/Scripts/Python/AQWA/read_ts_to_pickle.py",
		"/Users/rhydarharris/Dropbox/Scripts/Python/AQWA/aqwa_euler.py",
		"/Users/rhydarharris/Dropbox/analyze_lis.py",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/IPython Notebook/README.md",
		"/Volumes/F/PROJECT_BACKUP/SA (S2018) LNG Medium Term IPP/01_Data/Metocean/CSIR_Wind_Processing.rmd",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/Sections/Conclusions.Rnw",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/Main/RLH_MEng_Project.Rnw",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/BackMatter/Bibliography.bib",
		"/Volumes/F/S2009/01_Data/Layout/05/Report/Main/Layout05.Rnw",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/Tables/summaryTab.tex",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/User/LaTeXing.sublime-settings",
		"/Volumes/F/PROJECT_BACKUP/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/Draft-2014-05-26X4/Tables/predicted.tide.tex",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/Sections/test2.tex",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/Sections/test2.Rnw",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/R-Box/R-Box.sublime-settings",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/User/R-Box.sublime-settings",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Data/Wave/NCEP/processed/test.png",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/ProjectPlanning/Plan/Project Status.html",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/Sections/Introduction.Rnw",
		"/F/S2009/Notes/LiteratureStudy.bib",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/Main/RLH_MEng_Project.tex",
		"/C/Users/rlh.PRDW/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/F/S2009/Notes/Notes.txt",
		"/F/S2009/Notes/C2001_NOTES.Rnw",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/Sections/LiteratureStudy.Rnw",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Report/Main/Main.Rnw",
		"/Users/rhydarharris/.qgis2/python/plugins/numericalVertexEdit/__init__.py",
		"/Users/rhydarharris/.qgis2/python/plugins/numericalVertexEdit/numericalvertexedit.py",
		"/Users/rhydarharris/.qgis2/python/plugins/numericalVertexEdit/resources.py",
		"/Users/rhydarharris/.qgis2/python/plugins/numericalVertexEdit/vertexfindertool.py",
		"/Users/rhydarharris/.qgis2/python/plugins/cadtools/cadtoolsaboutgui.py",
		"/Users/rhydarharris/Dropbox/Module1.bas",
		"/Users/rhydarharris/Dropbox/RunPy.bat",
		"/Users/rhydarharris/Desktop/01 Project Admin/Source/Python/01.py",
		"/Users/rhydarharris/Dropbox/grib_data/etc/AQWA_HYDRO_LINE_EXAMPLE.txt",
		"/Users/rhydarharris/Dropbox/grib_data/bin/http_server.py",
		"/Users/rhydarharris/Dropbox/grib_data/lib/python/grib.py",
		"/Users/rhydarharris/Documents/Coursera/R-Programming/Assignment/Assignment 03/Calculations/hospital-data.csv",
		"/Users/rhydarharris/Documents/Python/mass_spring.py",
		"/Users/rhydarharris/Dropbox/Scripts/Python/testclass.py",
		"/Users/rhydarharris/Dropbox/Scripts/Python/solver.py",
		"/Users/rhydarharris/Dropbox/Scripts/Python/bumpy.py",
		"/Users/rhydarharris/Dropbox/MEng/Thesis/Research Proposal/proposal.tex",
		"/Users/rhydarharris/Downloads/IHFOAM_materials/reference/sampling/postSensPres.py",
		"/Users/rhydarharris/Documents/M.Eng/Admin/Project Maintenance/TaskJuggler/tutorial.tjp",
		"/Users/rhydarharris/Dropbox/Org/admin.folder.structure.tex",
		"/Users/rhydarharris/Dropbox/Scripts/Python/admin.folder.structure.py",
		"/Users/rhydarharris/Documents/Coursera/Data Scientist Toolbox/Assignment/HelloWorld.md",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Volumes/__RHYDAR-PROLI_Users/Rhydar/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Volumes/PRDW_RLH01/Model_Tests/Test.Rnw",
		"/Volumes/PRDW_RLH01/Model_Tests/prdw_calculations_sheet.cls",
		"/Users/rhydarharris/Dropbox/New folder/processPTA.pl",
		"/Volumes/PRDW_RLH01/Model_Tests/CM_DRFT_001_MOTIONS.dat",
		"/Volumes/PRDW_RLH01/Model_Tests/AQWA001.PTA",
		"/Volumes/PRDW_RLH01/AQWA/ANSYS AQWA/AQWA Intro/Input-Files/stinger.dat",
		"/Volumes/PRDW_RLH01/AQWA/ANSYS AQWA/AQWA Intro/Input-Files/tanker3.DAT",
		"/Volumes/PRDW_RLH01/AQWA/ANSYS AQWA/AQWA Intro/Input-Files/ShipFrequency2.DAT",
		"/Volumes/PRDW_RLH01/AQWA/ANSYS AQWA/AQWA Intro/Input-Files/TwoTankDrift.DAT",
		"/Volumes/PRDW_RLH01/AQWA/ANSYS AQWA/AQWA Intro/Input-Files/ShipLibrium2.DAT",
		"/Volumes/PRDW_RLH01/AQWA/ANSYS AQWA/AQWA Intro/Input-Files/ShipDrift2.DAT",
		"/Volumes/PRDW_RLH01/AQWA/ANSYS AQWA/AQWA Intro/Input-Files/ShipLibrium.dat",
		"/Volumes/PRDW_RLH01/AQWA/ANSYS AQWA/AQWA Intro/Input-Files/HydiTanker.DAT",
		"/Users/rhydarharris/Dropbox/RunGenerateMooring.sh",
		"/Users/rhydarharris/Dropbox/GenerateMooringFiles.py",
		"/Users/rhydarharris/Desktop/CM_LINE_001.LIS",
		"/Users/rhydarharris/Dropbox/writeAQWA_Files_Py.py",
		"/Users/rhydarharris/Dropbox/WriteAQWA_Files_Rev01.pl",
		"/Users/rhydarharris/Dropbox/RTools/coastalTools/NAMESPACE",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/Draft-2014-05-26X4/PontoonDetails.Rnw",
		"/Users/rhydarharris/Dropbox/RTools/coastalTools/DESCRIPTION",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/Draft-2014-05-26X4/MetoceanData.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/Draft-2014-05-26X4/Introduction.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/Draft-2014-05-26X4/WindAndCurrent.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/Draft-2014-05-23X3/MetoceanData.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/DiscussionConclusions.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/WindAndCurrent.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/PontoonDetails.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/Introduction.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/MetoceanData.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/Main.bib",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/ProcessResults02.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/AnalyticalSolution.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/AppendixA.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/AppendixB.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/ModelDescription.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/ProcessResults.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/ProcessResultsTest.Rnw",
		"/Volumes/PRDW_RLH01/Australia (A004) Fremantle Traffic Bridge Study/Calculations/TN01/Sections/SpreadMooring.Rnw",
		"/Users/rhydarharris/Dropbox/Org/Examples/f-20.tjp",
		"/Users/rhydarharris/.emacs",
		"/Users/rhydarharris/Dropbox/Pampa/Project Management/Org-Mode-Planning.org",
		"/Users/rhydarharris/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/42837564-D116-4812-BD24-FE3269DCBE76/For Rhydar/BW700m_LINE/BW700m_LINE.DAT",
		"/Users/rhydarharris/Dropbox/Org/TaskjugglerProj.tjp",
		"/Users/rhydarharris/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/rhydarharris/Dropbox/Org/Work-Week-2014-04-12.org",
		"/Users/rhydarharris/Desktop/PRDW_RLH01/03_Scripts/C#/CoastalFlooding/Dev/CoastalEngineering/CoastalEngineering.cs",
		"/Volumes/PRDW_RLH01/Position Papers (948) Vessel Motions Capability Development/Working/Engineers/RLH/Technical Specifications/z_PRDW_Practice___Guidelines/Guidelines.bib",
		"/Volumes/PRDW_RLH01/Position Papers (948) Vessel Motions Capability Development/Working/Engineers/RLH/Technical Specifications/z_PRDW_Practice___Guidelines/PRDW_Practice_Guidelines_Presentation.Rnw",
		"/Volumes/PRDW_RLH01/Position Papers (948) Vessel Motions Capability Development/Working/Engineers/RLH/Technical Specifications/z_PRDW_Practice___Guidelines/MooringLines.Rnw",
		"/Volumes/PRDW_RLH01/Position Papers (948) Vessel Motions Capability Development/Working/Engineers/RLH/Technical Specifications/z_PRDW_Practice___Guidelines/VesselTypes.Rnw",
		"/Volumes/PRDW_RLH01/Position Papers (948) Vessel Motions Capability Development/Working/Engineers/RLH/Technical Specifications/z_PRDW_Practice___Guidelines/Forces.Rnw",
		"/Volumes/PRDW_RLH01/Position Papers (948) Vessel Motions Capability Development/Working/Engineers/RLH/Technical Specifications/z_PRDW_Practice___Guidelines/MooringDesignApproach.Rnw",
		"/Volumes/PRDW_RLH01/Position Papers (948) Vessel Motions Capability Development/Working/Engineers/RLH/Technical Specifications/z_PRDW_Practice___Guidelines/Introduction.Rnw",
		"/Volumes/PRDW_RLH01/Position Papers (948) Vessel Motions Capability Development/Working/Engineers/RLH/Technical Specifications/z_PRDW_Practice___Guidelines/MooringRestraint.Rnw",
		"/Volumes/PRDW_RLH01/Position Papers (948) Vessel Motions Capability Development/Working/Engineers/RLH/Technical Specifications/z_PRDW_Practice___Guidelines/MooringBulk.Rnw"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"cut",
			"ounts",
			"tt",
			"tt\n",
			"motion_limits[\\d]\n",
			"motion_limits[1]\n",
			"motion_limits\n",
			"motion_limits[\\d]\n",
			"motions_limits[\\d]\n",
			"]/\n",
			"A.sqlite",
			",",
			"Sjolte",
			"finnegan",
			"Sandvik",
			"Sjolte",
			"Mackay",
			"file",
			".\n",
			"/",
			"tree",
			"auto_",
			"auto_\n",
			"auto_match\n",
			" \n",
			"heading",
			"}} ",
			"\\tag{",
			"\\t\\t",
			"\\t+",
			"                         ",
			"MYNEWTAB",
			"\\s+",
			"\\t"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\",
			"\\marginnote{",
			"\\t",
			"",
			"\\t",
			"",
			"MYNEWTAB"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "R/metocean.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6003,
						"regions":
						{
						},
						"selection":
						[
							[
								5928,
								5928
							]
						],
						"settings":
						{
							"r_box_status": false,
							"syntax": "Packages/R-Box/syntax/R Extended.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 412.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26791,
						"regions":
						{
						},
						"selection":
						[
							[
								22573,
								22573
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_indent": false,
							"default_dir": "/Users/rhydarharris/Dropbox/Scripts/R/RPackages/Metocean",
							"detect_indentation": false,
							"gutter": false,
							"history_arrows": true,
							"indent_subsequent_lines": false,
							"line_numbers": false,
							"repl": true,
							"repl_external_id": "r",
							"repl_id": "1dbd14d110034ae1a95b5f83a0bc659e",
							"repl_restart_args":
							{
								"additional_scopes":
								[
									"tex.latex.knitr"
								],
								"cmd":
								{
									"linux":
									[
										"R",
										"--interactive",
										"--no-readline"
									],
									"osx":
									[
										"R",
										"--interactive",
										"--no-readline"
									],
									"windows":
									[
										"Rterm.exe",
										"--ess",
										"--encoding=$win_cmd_encoding"
									]
								},
								"cmd_postfix": "\n",
								"cwd": "$file_path",
								"encoding":
								{
									"linux": "utf8",
									"osx": "utf8",
									"windows": "$win_cmd_encoding"
								},
								"extend_env":
								{
									"linux":
									{
										"PATH": "{PATH}:/usr/local/bin"
									},
									"osx":
									{
										"PATH": "{PATH}:/usr/local/bin"
									},
									"windows":
									{
									}
								},
								"external_id": "r",
								"soft_quit": "\nquit(save=\"no\")\n",
								"suppress_echo":
								{
									"linux": true,
									"osx": true,
									"windows": false
								},
								"syntax": "Packages/R/R Console.tmLanguage",
								"type": "subprocess"
							},
							"repl_sublime2": false,
							"smart_indent": false,
							"spell_check": false,
							"syntax": "Packages/R/R Console.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8865.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/rhydarharris/Dropbox/MEng/Thesis/Scripts/processNCEP.r",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27610,
						"regions":
						{
						},
						"selection":
						[
							[
								874,
								401
							]
						],
						"settings":
						{
							"r_box_status": false,
							"syntax": "Packages/R-Box/syntax/R Extended.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.507136516466,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 25.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "Metocean.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 114.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
